<!DOCTYPE html>
<html lang="zh-CN" data-theme="light">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>家用伺服器折腾手记-2：Mac mini 部署 MoviePilot 教程 - Moreyu's Blog ✨</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fontsource/maple-mono@latest/index.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.8/dist/medium-zoom.min.css">
  <style>
    /* 文章目录样式 */
    .toc {
      position: fixed;
      right: 2rem;
      top: 6rem;
      width: 280px;
      max-height: calc(100vh - 8rem);
      overflow-y: auto;
      background: var(--card-bg);
      border-radius: 8px;
      padding: 1rem;
      box-shadow: var(--shadow);
      font-size: 0.9rem;
      z-index: 100;
      scrollbar-width: thin;
      scrollbar-color: var(--primary) var(--card-bg);
    }
    
    .toc::-webkit-scrollbar {
      width: 6px;
    }
    
    .toc::-webkit-scrollbar-track {
      background: var(--card-bg);
    }
    
    .toc::-webkit-scrollbar-thumb {
      background-color: var(--primary);
      border-radius: 3px;
    }
    
    .toc-title {
      font-weight: bold;
      margin-bottom: 0.5rem;
      color: var(--primary);
      font-size: 1.1rem;
    }
    
    .toc ul {
      list-style: none;
      padding-left: 1rem;
      margin: 0;
    }
    
    .toc li {
      margin: 0.5rem 0;
      line-height: 1.4;
    }
    
    .toc a {
      color: var(--text-light);
      text-decoration: none;
      transition: all 0.2s;
      display: block;
      padding: 0.2rem 0.5rem;
      border-radius: 4px;
    }
    
    .toc a:hover {
      color: var(--primary);
      background: var(--bg);
    }
    
    .toc a.active {
      color: var(--primary);
      font-weight: bold;
      background: var(--bg);
    }

    /* 阅读进度 */
    .reading-progress {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background: var(--border);
      z-index: 1000;
    }
    
    .reading-progress-bar {
      height: 100%;
      background: var(--primary);
      width: 0;
      transition: width 0.2s;
    }

    /* 代码块复制按钮 */
    pre {
      position: relative;
      border-radius: 8px;
      margin: 1.5rem 0;
    }
    
    .copy-button {
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
      padding: 0.3rem 0.6rem;
      background: var(--card-bg);
      border: 1px solid var(--border);
      border-radius: 4px;
      color: var(--text-light);
      font-size: 0.8rem;
      cursor: pointer;
      transition: all 0.2s;
      opacity: 0;
    }
    
    pre:hover .copy-button {
      opacity: 1;
    }
    
    .copy-button:hover {
      background: var(--primary);
      color: white;
      border-color: var(--primary);
      transform: scale(1.05);
    }
    
    /* 图片预览 */
    .medium-zoom-overlay {
      background: var(--bg) !important;
    }
    
    .medium-zoom-image--opened {
      z-index: 1000;
    }

    /* 分享按钮 */
    .share-menu {
      position: fixed;
      left: 2rem;
      top: 50%;
      transform: translateY(-50%);
      display: flex;
      flex-direction: column;
      gap: 0.8rem;
      z-index: 100;
    }
    
    .share-button {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      background: var(--card-bg);
      border: 1px solid var(--border);
      color: var(--text);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      font-size: 1.1rem;
    }
    
    .share-button:hover {
      background: var(--primary);
      color: white;
      border-color: var(--primary);
      transform: scale(1.1) rotate(360deg);
    }

    /* 文章内容样式优化 */
    .post-content {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }
    
    .post-content h2 {
      margin-top: 2.5rem;
      margin-bottom: 1.5rem;
      color: var(--primary);
    }
    
    .post-content h3 {
      margin-top: 2rem;
      margin-bottom: 1rem;
      color: var(--text);
    }
    
    .post-content p {
      line-height: 1.8;
      margin: 1rem 0;
    }
    
    .post-content code {
      background: var(--card-bg);
      padding: 0.2rem 0.4rem;
      border-radius: 4px;
      font-family: 'Maple Mono', monospace;
    }
    
    .post-content pre code {
      background: none;
      padding: 0;
    }
    
    .post-meta {
      display: flex;
      gap: 1.5rem;
      margin-bottom: 2rem;
      color: var(--text-light);
      font-size: 0.9rem;
    }
    
    .post-tags {
      margin-top: 3rem;
      display: flex;
      gap: 0.8rem;
      flex-wrap: wrap;
    }
    
    .tag {
      background: var(--card-bg);
      color: var(--primary);
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
      font-size: 0.9rem;
      transition: all 0.2s;
    }
    
    .tag:hover {
      background: var(--primary);
      color: white;
      transform: translateY(-2px);
    }
    
    @media (max-width: 1200px) {
      .toc {
        display: none;
      }
      
      .share-menu {
        position: fixed;
        left: 1rem;
        bottom: 5rem;
        top: auto;
        transform: none;
        flex-direction: row;
        gap: 0.5rem;
      }
      
      .post-content {
        padding: 1rem;
      }
    }
  </style>
</head>
<body>
  <div class="reading-progress">
    <div class="reading-progress-bar"></div>
  </div>
  
  <button class="theme-toggle" aria-label="切换主题">
    <i class="fas fa-moon"></i>
  </button>
  
  <h1 class="gradient-text">家用伺服器折腾手记-2：Mac mini 部署 MoviePilot 教程</h1>
  
  <nav class="nav">
    <a href="/"><i class="fas fa-home"></i> 首页 🏠</a>
    <a href="/archives"><i class="fas fa-archive"></i> 归档 📚</a>
    <a href="/categories"><i class="fas fa-folder"></i> 分类 📂</a>
    <a href="/about"><i class="fas fa-user"></i> 关于 👋</a>
  </nav>

  <aside class="toc">
    <div class="toc-title">📚 目录</div>
    <ul>
      <li><a href="#前言">前言 📝</a></li>
<li><a href="#准备工作">准备工作 🛠️</a></li>
  <li><a href="#创建工作目录">创建工作目录</a></li>
  <li><a href="#创建配置文件">创建配置文件</a></li>
<li><a href="#部署步骤">部署步骤 🚀</a></li>
  <li><a href="#启动服务">启动服务</a></li>
  <li><a href="#检查服务状态">检查服务状态</a></li>
<li><a href="#基础配置">基础配置 ⚙️</a></li>
  <li><a href="#访问-web-界面">访问 Web 界面</a></li>
  <li><a href="#配置媒体服务器">配置媒体服务器</a></li>
  <li><a href="#配置下载器">配置下载器</a></li>
  <li><a href="#配置索引器">配置索引器</a></li>
<li><a href="#进阶配置">进阶配置 🔧</a></li>
  <li><a href="#订阅规则设置">订阅规则设置</a></li>
  <li><a href="#自定义识别词">自定义识别词</a></li>
<li><a href="#性能优化">性能优化 🚄</a></li>
  <li><a href="#资源限制">资源限制</a></li>
  <li><a href="#缓存优化">缓存优化</a></li>
<li><a href="#常见问题">常见问题 💡</a></li>
  <li><a href="#媒体识别问题">媒体识别问题</a></li>
  <li><a href="#下载问题">下载问题</a></li>
<li><a href="#进阶使用">进阶使用 🎯</a></li>
  <li><a href="#api-集成">API 集成</a></li>
  <li><a href="#自动化脚本">自动化脚本</a></li>
<li><a href="#后续计划">后续计划 📈</a></li>
    </ul>
  </aside>

  <div class="share-menu">
    <button class="share-button" title="分享到微信" onclick="shareToWeChat()">
      <i class="fab fa-weixin"></i>
    </button>
    <button class="share-button" title="分享到微博" onclick="shareToWeibo()">
      <i class="fab fa-weibo"></i>
    </button>
    <button class="share-button" title="分享到 Twitter" onclick="shareToTwitter()">
      <i class="fab fa-twitter"></i>
    </button>
    <button class="share-button" title="复制链接" onclick="copyPageUrl()">
      <i class="fas fa-link"></i>
    </button>
  </div>

  <main class="post-content">
    <div class="card">
      <div class="post-meta">
        <span><i class="far fa-calendar"></i> 2025-03-08</span>
        <span><i class="far fa-clock"></i> 阅读时间：11分钟</span>
        <span><i class="far fa-folder"></i> 分类：服务器</span>
      </div>

      <div class="reading-progress">
    <div class="reading-progress-bar"></div>
  </div>
  
  <button class="theme-toggle" aria-label="切换主题">
    <i class="fas fa-moon"></i>
  </button>
  
  <h1 class="gradient-text">家用伺服器折腾手记-2：Mac mini 部署 MoviePilot 教程</h1>
  
  

  

  <div class="share-menu">
    <button class="share-button" title="分享到微信" onclick="shareToWeChat()">
      <i class="fab fa-weixin"></i>
    </button>
    <button class="share-button" title="分享到微博" onclick="shareToWeibo()">
      <i class="fab fa-weibo"></i>
    </button>
    <button class="share-button" title="分享到 Twitter" onclick="shareToTwitter()">
      <i class="fab fa-twitter"></i>
    </button>
    <button class="share-button" title="复制链接" onclick="copyPageUrl()">
      <i class="fas fa-link"></i>
    </button>
  </div>

  <main class="post-content">
    <div class="card">
      <div class="post-meta">
        <span><i class="far fa-calendar"></i> 2025-03-08</span>
        <span><i class="far fa-clock"></i> 阅读时间：9分钟</span>
        <span><i class="far fa-folder"></i> 分类：服务器</span>
      </div>

      <h1>家用伺服器折腾手记-2：Mac mini 部署 MoviePilot 教程 🎬</h1><div class="meta">发布时间：2025-03-08 | 分类：服务器, Docker, 影视</div><h2>前言 📝</h2><p>在上一篇文章中，我们介绍了如何在 Mac mini 上搭建 Docker 环境。这次我们将继续探索，使用 Docker Compose 部署 MoviePilot，这是一个强大的电影管理工具，可以帮助我们自动下载和管理电影资源。MoviePilot 是 NAStool 的 Python 重制版，提供了更好的性能和更多的功能。</p><h2>准备工作 🛠️</h2><div class="tip"><strong>提示：</strong>确保你已经按照上一篇文章完成了 Docker 环境的搭建。</div><h3>1. 创建工作目录</h3><pre><code class="bash">mkdir -p ~/docker/moviepilot
cd ~/docker/moviepilot</code></pre><h3>2. 创建配置文件</h3><pre><code class="yaml"># docker-compose.yml
version: '3.3'
services:
  moviepilot:
    image: jxxghp/moviepilot:latest
    container_name: moviepilot
    hostname: moviepilot
    network_mode: bridge
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Shanghai
      - MOVIEPILOT_AUTO_UPDATE=true
      - MOVIEPILOT_CN_UPDATE=true
      - MOVIEPILOT_PROXY_HOST=
      - MOVIEPILOT_PROXY_PORT=
      - MOVIEPILOT_PROXY_USERNAME=
      - MOVIEPILOT_PROXY_PASSWORD=
      - MOVIEPILOT_SUPERUSER=
      - MOVIEPILOT_PASSWORD=
    volumes:
      - ./config:/config
      - ./data:/data
      - /path/to/movies:/movies
      - /path/to/tv:/tv
      - /path/to/downloads:/downloads
    ports:
      - 3000:3000
    restart: unless-stopped</code></pre><h2>部署步骤 🚀</h2><h3>1. 启动服务</h3><pre><code class="bash">docker-compose up -d</code></pre><h3>2. 检查服务状态</h3><pre><code class="bash">docker ps | grep moviepilot
docker logs -f moviepilot</code></pre><h2>基础配置 ⚙️</h2><h3>1. 访问 Web 界面</h3><p>打开浏览器访问 <code>http://localhost:3000</code>，使用配置文件中设置的超级管理员账号密码登录。</p><h3>2. 配置媒体服务器</h3><p>MoviePilot 支持多种媒体服务器：</p><ul><li>Emby</li><li>Jellyfin</li><li>Plex</li></ul><h3>3. 配置下载器</h3><p>支持的下载器包括：</p><ul><li>qBittorrent</li><li>Transmission</li><li>115网盘</li><li>阿里云盘</li></ul><h3>4. 配置索引器</h3><p>添加以下常用索引器：</p><ul><li>Private Tracker（私有站点）</li><li>Public Tracker（公开站点）</li><li>预配置站点</li></ul><h2>进阶配置 🔧</h2><h3>1. 订阅规则设置</h3><pre><code class="yaml"># 示例订阅规则
- name: "4K电影"
  type: "电影"
  resolution: ["4K"]
  quality: ["WEB-DL", "REMUX"]
  size: [4000, 50000]

- name: "剧集追更"
  type: "电视剧"
  resolution: ["1080p"]
  quality: ["WEB-DL"]
  size: [500, 3000]</code></pre><h3>2. 自定义识别词</h3><pre><code class="yaml"># 自定义识别词配置
custom_words:
  - name: "限制级"
    regex: "NC-17|R级|限制级"
    replace: "R"

  - name: "国语配音"
    regex: "国语|国语配音|中配"
    replace: "国语"</code></pre><h2>性能优化 🚄</h2><h3>1. 资源限制</h3><pre><code class="yaml"># 在 docker-compose.yml 中添加资源限制
services:
  moviepilot:
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 500M</code></pre><h3>2. 缓存优化</h3><div class="tip"><strong>建议：</strong>将下载缓存目录挂载到 SSD 上以提高性能。</div><h2>常见问题 💡</h2><h3>1. 媒体识别问题</h3><ul><li>检查文件命名是否规范</li><li>确认媒体信息是否正确</li><li>查看日志排查问题</li></ul><h3>2. 下载问题</h3><ul><li>检查下载器连接状态</li><li>确认磁盘空间是否充足</li><li>验证 Tracker 可用性</li></ul><h2>进阶使用 🎯</h2><h3>1. API 集成</h3><pre><code class="python"># 使用 API 获取媒体信息
import requests

def get_media_info(api_key, media_id):
    url = f"http://localhost:3000/api/v1/media/{media_id}"
    headers = {"X-API-Key": api_key}
    response = requests.get(url, headers=headers)
    return response.json()</code></pre><h3>2. 自动化脚本</h3><pre><code class="python"># 自动清理脚本
import os
import shutil
from datetime import datetime, timedelta

def clean_old_downloads():
    downloads_dir = "/path/to/downloads"
    threshold = datetime.now() - timedelta(days=30)
    
    for root, dirs, files in os.walk(downloads_dir):
        for file in files:
            file_path = os.path.join(root, file)
            file_time = datetime.fromtimestamp(os.path.getmtime(file_path))
            
            if file_time &lt; threshold:
                try:
                    os.remove(file_path)
                    print(f"已删除: {file_path}")
                except Exception as e:
                    print(f"删除失败: {file_path}, 错误: {e}")

if __name__ == "__main__":
    clean_old_downloads()</code></pre><h2>后续计划 📈</h2><p>在下一篇文章中，我们将探讨：</p><ul><li>如何使用 Nginx 反向代理实现外网访问</li><li>如何配置 SSL 证书实现安全访问</li><li>如何使用 Telegram Bot 实现远程控制</li><li>如何优化媒体库的分类和展示</li></ul><a href="/" class="back-to-home">返回首页 🏠</a>


      <div class="post-tags">
        
      </div>
    </div>
  </main>

      <div class="post-tags">
        <span class="tag">服务器</span>
<span class="tag"></span>
      </div>
    </div>
  </main>

  <footer>
    <p>&copy; 2024 Moreyu's Blog 🎉 | 本站已稳定运行 444 天 ⚡️</p>
    <div class="social-links">
      <a href="https://github.com/moreyu" target="_blank"><i class="fab fa-github"></i> GitHub 🐱</a>
      <a href="mailto:your@email.com"><i class="fas fa-envelope"></i> Email ✉️</a>
    </div>
  </footer>

  <script src="/js/theme.js"></script>
  <script src="/js/scroll.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.8/dist/medium-zoom.min.js"></script>
  <script>
    // 初始化图片预览
    mediumZoom('img:not(.avatar)', {
      margin: 24,
      background: 'var(--bg)',
      scrollOffset: 40,
    });
    
    // 代码块复制功能
    document.querySelectorAll('pre').forEach(pre => {
      const button = document.createElement('button');
      button.className = 'copy-button';
      button.textContent = '复制';
      button.addEventListener('click', () => {
        navigator.clipboard.writeText(pre.querySelector('code').textContent)
          .then(() => {
            button.textContent = '已复制！';
            setTimeout(() => button.textContent = '复制', 2000);
          })
          .catch(err => {
            console.error('复制失败:', err);
            button.textContent = '复制失败';
            setTimeout(() => button.textContent = '复制', 2000);
          });
      });
      pre.appendChild(button);
    });
    
    // 阅读进度指示器
    const progressBar = document.querySelector('.reading-progress-bar');
    window.addEventListener('scroll', () => {
      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      progressBar.style.width = scrolled + '%';
    });
    
    // 目录高亮
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        const id = entry.target.getAttribute('id');
        const tocLink = document.querySelector(`.toc a[href="#${id}"]`);
        if (tocLink) {
          if (entry.intersectionRatio > 0) {
            document.querySelectorAll('.toc a').forEach(link => link.classList.remove('active'));
            tocLink.classList.add('active');
          }
        }
      });
    }, { threshold: 0.5 });
    
    document.querySelectorAll('h2, h3').forEach((heading) => {
      observer.observe(heading);
    });

    // 分享功能
    function shareToWeChat() {
      alert('请截图分享到微信');
    }
    
    function shareToWeibo() {
      const text = document.title;
      const url = window.location.href;
      window.open(`http://service.weibo.com/share/share.php?url=${encodeURIComponent(url)}&title=${encodeURIComponent(text)}`);
    }
    
    function shareToTwitter() {
      const text = document.title;
      const url = window.location.href;
      window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`);
    }
    
    function copyPageUrl() {
      navigator.clipboard.writeText(window.location.href)
        .then(() => alert('链接已复制到剪贴板！'))
        .catch(err => console.error('复制失败:', err));
    }
  </script>
</body>
</html> 