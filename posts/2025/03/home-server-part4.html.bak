<!DOCTYPE html>
<html lang="zh-CN" data-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>家用伺服器折腾手记-4：Mac mini 部署 AList 服务 - Moreyu's Blog ✨</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fontsource/maple-mono@latest/index.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/highlight.js@11.9.0/styles/atom-one-dark.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.8/dist/medium-zoom.min.css">
  <style>
    :root {
      /* Light Theme */
      --primary-light-theme: #00dc82;
      --primary-dark-light-theme: #00b368;
      --primary-light-light-theme: #33e599;
      --text-light-theme: #1a1a1a;
      --text-light-light-theme: #666666;
      --bg-light-theme: #f5f5f5;
      --card-bg-light-theme: #ffffff;
      --border-light-theme: #e0e0e0;
      --code-bg-light-theme: #f8f8f8;
      --code-color-light-theme: #333333;

      /* Dark Theme */
      --primary-dark-theme: #00dc82;
      --primary-dark-dark-theme: #00b368;
      --primary-light-dark-theme: #33e599;
      --text-dark-theme: #f5f5f5;
      --text-light-dark-theme: #a0a0a0;
      --bg-dark-theme: #1a1a1a;
      --card-bg-dark-theme: #242424;
      --border-dark-theme: #333;
      --code-bg-dark-theme: #282c34;
      --code-color-dark-theme: #abb2bf;
    }

    html[data-theme="light"] {
      --primary: var(--primary-light-theme);
      --primary-dark: var(--primary-dark-light-theme);
      --primary-light: var(--primary-light-light-theme);
      --text: var(--text-light-theme);
      --text-light: var(--text-light-light-theme);
      --bg: var(--bg-light-theme);
      --card-bg: var(--card-bg-light-theme);
      --border: var(--border-light-theme);
      --code-bg: var(--code-bg-light-theme);
      --code-color: var(--code-color-light-theme);
    }

    html[data-theme="dark"] {
      --primary: var(--primary-dark-theme);
      --primary-dark: var(--primary-dark-dark-theme);
      --primary-light: var(--primary-light-dark-theme);
      --text: var(--text-dark-theme);
      --text-light: var(--text-light-dark-theme);
      --bg: var(--bg-dark-theme);
      --card-bg: var(--card-bg-dark-theme);
      --border: var(--border-dark-theme);
      --code-bg: var(--code-bg-dark-theme);
      --code-color: var(--code-color-dark-theme);
    }

    body {
      margin: 0;
      padding: 0;
      font-family: var(--font-mono);
      line-height: 1.6;
      color: var(--text);
      background: var(--bg);
    }

    /* 阅读进度 */
    .reading-progress {
      position: fixed;
      top: 0;
      right: 0;
      width: 3px;
      height: 100vh;
      background: var(--border);
      z-index: 1000;
      transition: width 0.3s ease;
    }

    .reading-progress::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: var(--progress, 0%);
      background: var(--primary);
      box-shadow: 0 0 10px var(--primary);
      transition: height 0.3s ease;
    }

    .reading-progress:hover {
      width: 5px;
    }

    /* 代码块样式 */
    pre {
      position: relative;
      border-radius: 8px;
      margin: 1.5rem 0;
      background: var(--code-bg) !important;
      padding: 1rem !important;
      overflow-x: auto;
      border: 1px solid var(--border);
    }
    
    pre code {
      font-family: var(--font-mono) !important;
      font-size: 0.9rem !important;
      line-height: 1.5 !important;
      color: var(--code-color) !important;
    }
    
    .copy-button {
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
      padding: 0.3rem 0.6rem;
      background: rgba(255,255,255,0.1);
      border: 1px solid rgba(255,255,255,0.2);
      border-radius: 4px;
      color: #fff;
      font-size: 0.8rem;
      cursor: pointer;
      transition: all 0.2s;
      opacity: 0;
    }
    
    pre:hover .copy-button {
      opacity: 1;
    }
    
    .copy-button:hover {
      background: var(--primary);
      color: white;
      border-color: var(--primary);
      box-shadow: 0 0 10px var(--primary);
    }

    /* 文章内容样式 */
    .post-content {
      max-width: 800px;
      margin: 2rem auto;
      padding: 2rem;
      font-family: var(--font-mono);
    }
    
    .post-content h1 {
      font-size: 2.2rem;
      background: var(--gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 1.5rem;
      font-weight: 600;
    }
    
    .post-content h2 {
      margin-top: 2.5rem;
      margin-bottom: 1.5rem;
      color: var(--primary);
      font-size: 1.8rem;
      font-weight: 600;
    }
    
    .post-content h3 {
      margin-top: 2rem;
      margin-bottom: 1rem;
      color: var(--primary-light);
      font-size: 1.5rem;
      font-weight: 500;
    }
    
    .post-content p {
      line-height: 1.8;
      margin: 1.2rem 0;
      color: var(--text);
      font-size: 1rem;
    }
    
    .post-content img {
      max-width: 100%;
      border-radius: 8px;
      margin: 1.5rem 0;
      border: 1px solid var(--border);
    }
    
    .post-content code {
      background: var(--code-bg);
      padding: 0.2rem 0.4rem;
      border-radius: 4px;
      font-family: var(--font-mono);
      font-size: 0.9em;
      color: var(--primary);
    }
    
    .post-content pre code {
      background: none;
      padding: 0;
      color: var(--code-color);
    }
    
    .post-meta {
      display: flex;
      gap: 1.5rem;
      margin-bottom: 2rem;
      color: var(--text-light);
      font-size: 0.9rem;
      font-family: var(--font-mono);
    }
    
    .post-tags {
      margin-top: 3rem;
      display: flex;
      gap: 0.8rem;
      flex-wrap: wrap;
    }
    
    .tag {
      background: transparent;
      color: var(--primary);
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
      font-size: 0.9rem;
      transition: all 0.2s;
      border: 1px solid var(--primary);
    }
    
    .tag:hover {
      background: var(--primary);
      color: var(--bg);
      transform: translateY(-2px);
      box-shadow: 0 0 10px var(--primary);
    }

    /* 返回首页按钮 */
    .back-home {
      position: fixed;
      left: 2rem;
      top: 2rem;
      background: transparent;
      color: var(--primary);
      padding: 0.6rem 1.2rem;
      border-radius: 8px;
      font-size: 1rem;
      text-decoration: none;
      transition: all 0.3s;
      z-index: 1000;
      border: 1px solid var(--primary);
      font-family: var(--font-mono);
    }
    
    .back-home:hover {
      transform: translateY(-2px);
      box-shadow: 0 0 10px var(--primary);
      background: var(--primary);
      color: var(--bg);
    }

    .back-home i {
      margin-right: 0.5rem;
    }

    /* 目录样式 */
    .toc {
      position: fixed;
      right: 2rem;
      top: 6rem;
      width: 280px;
      max-height: calc(100vh - 8rem);
      overflow-y: auto;
      background: var(--card-bg);
      border-radius: 8px;
      padding: 1rem;
      box-shadow: var(--shadow);
      font-size: 0.9rem;
      z-index: 100;
      border: 1px solid var(--border);
      font-family: var(--font-mono);
    }
    
    .toc-title {
      font-weight: bold;
      margin-bottom: 0.5rem;
      color: var(--primary);
      font-size: 1.1rem;
    }
    
    .toc ul {
      list-style: none;
      padding-left: 1rem;
      margin: 0;
    }
    
    .toc li {
      margin: 0.5rem 0;
      line-height: 1.4;
    }
    
    .toc a {
      color: var(--text-light);
      text-decoration: none;
      transition: all 0.2s;
      display: block;
      padding: 0.2rem 0.5rem;
      border-radius: 4px;
    }
    
    .toc a:hover {
      color: var(--primary);
      background: var(--bg);
    }
    
    .toc a.active {
      color: var(--primary);
      font-weight: bold;
      background: var(--bg);
    }

    @media (max-width: 768px) {
      .back-home {
        left: 1rem;
        top: 1rem;
        padding: 0.6rem 1.2rem;
        font-size: 1rem;
      }
      
      .post-content {
        padding: 1rem;
      }
    }

    @media (max-width: 1200px) {
      .toc {
        position: fixed;
        right: -300px;
        top: 6rem;
        transition: right 0.3s ease;
        background: var(--card-bg);
        z-index: 999;
      }

      .toc.active {
        right: 0;
      }

      .toc-toggle {
        display: block;
        position: fixed;
        right: 2rem;
        top: 6rem;
        background: var(--card-bg);
        color: var(--primary);
        padding: 0.5rem;
        border-radius: 4px;
        border: 1px solid var(--primary);
        cursor: pointer;
        z-index: 1000;
      }
    }

    @media (min-width: 1201px) {
      .toc-toggle {
        display: none;
      }
    }

    /* 主题切换按钮样式 */
    .theme-toggle {
      position: fixed;
      right: 2rem;
      top: 2rem;
      background: transparent;
      color: var(--primary);
      padding: 0.6rem;
      border-radius: 50%;
      font-size: 1.2rem;
      border: 1px solid var(--primary);
      cursor: pointer;
      transition: all 0.3s;
      z-index: 1000;
    }

    .theme-toggle:hover {
      transform: rotate(180deg);
      background: var(--primary);
      color: var(--bg);
      box-shadow: 0 0 10px var(--primary);
    }
  </style>
</head>
<body>
  <div class="reading-progress">
    <div class="reading-progress-bar"></div>
  </div>

  <button class="theme-toggle" aria-label="切换主题">
    <i class="fas fa-moon"></i>
  </button>

  <a href="/" class="back-home">
    <i class="fas fa-arrow-left"></i> 返回首页
  </a>

  <main class="post-content">
    <div class="post-meta">
      <span><i class="far fa-calendar"></i> 2025-03-20</span>
      <span><i class="far fa-clock"></i> 阅读时间：9分钟</span>
      <span><i class="far fa-folder"></i> 分类：未分类</span></span>
    </div>

    <h1>家用伺服器折腾手记-4：Mac mini 部署 AList 服务</h1>

    <html><head></head><body><div><div class="post-meta"><span>2025-03-20</span><span>阅读时间：8分钟</span><span>分类：未分类</span></div><h1>家用伺服器折腾手记-4：Mac mini 部署 AList 服务</h1><button class="share-button" title="分享到微信" onclick="shareToWeChat()"></button>发布于 2025-03-10 · <span class="tag">Docker 🐳</span><span class="tag">文件管理 📁</span><span class="tag">自动化 ⚙️</span><p>继续我们的 Mac mini 服务器系列！今天我们要介绍如何使用 Docker 部署 AList，一个强大的文件列表程序。通过 AList，我们可以实现跨设备文件传输、搭建私人影视库，甚至可以整合各种云存储服务。</p><h2 id="为什么选择-alist">为什么选择 AList？ 🤔</h2><ul><li>支持多种存储方式：本地存储、WebDAV、S3、OneDrive 等</li><li>美观的界面：支持多种主题，响应式设计</li><li>强大的文件预览：支持视频、音频、图片、文档等多种格式</li><li>便捷的文件管理：支持上传、下载、复制、移动等操作</li><li>完善的权限控制：可以设置用户权限和访问密码</li></ul><h2 id="环境准备">环境准备 🛠️</h2><p>确保你的 Mac mini 上已经安装了 Docker 和 Docker Compose。如果还没有安装，可以参考我们的第一篇文章。</p><h2 id="部署步骤">部署步骤 📝</h2><h3 id="1-创建配置文件">1. 创建配置文件</h3><p>首先创建一个新的目录来存放 AList 的配置文件：</p><pre><code>mkdir -p ~/docker/alist cd ~/docker/alist</code></pre><p>创建 docker-compose.yml 文件：</p><pre><code>version: "3.8" services: alist: image: xhofe/alist:latest container_name: alist volumes: - ./data:/opt/alist/data - /path/to/media:/media # 替换为你的媒体文件路径 ports: - "5244:5244" environment: - PUID=1000 - PGID=1000 - TZ=Asia/Shanghai restart: unless-stopped</code></pre>注意：请将 /path/to/media 替换为你实际的媒体文件路径。<h3 id="2-启动服务">2. 启动服务</h3><p>在配置文件目录下运行：</p><pre><code>docker-compose up -d</code></pre><p>查看初始密码：</p><pre><code>docker exec -it alist ./alist admin</code></pre><h3 id="3-基础配置">3. 基础配置</h3><ol><li>访问 <code>http://你的IP:5244</code></li><li>使用默认用户名 <code>admin</code>和上一步获取的密码登录</li><li>进入管理面板，修改密码</li><li>添加存储：<ul><li>本地存储：直接映射本地文件夹</li><li>WebDAV：连接其他 WebDAV 服务</li><li>云存储：配置各类云存储服务</li></ul></li></ol><h2 id="进阶配置">进阶配置 ⚙️</h2><h3 id="1-反向代理设置">1. 反向代理设置</h3><p>如果你想通过域名访问 AList，可以配置 Nginx 反向代理：</p><pre><code>server { listen 80; server_name alist.yourdomain.com; location / { proxy_pass http://127.0.0.1:5244; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } }</code></pre><h3 id="2-ssl-配置">2. SSL 配置</h3><p>建议配置 SSL 证书，确保数据传输安全：</p><pre><code>server { listen 443 ssl; server_name alist.yourdomain.com; ssl_certificate /path/to/cert.pem; ssl_certificate_key /path/to/key.pem; # ... 其他配置同上 }</code></pre><h3 id="3-文件预览优化">3. 文件预览优化</h3><p>AList 支持多种文件预览方式，可以根据需要进行配置：</p><ul><li>视频预览：支持 HLS 转码，平滑播放</li><li>音频预览：支持在线播放和播放列表</li><li>文档预览：支持 Office、PDF 等格式</li><li>图片预览：支持图片缩放和幻灯片播放</li></ul><h2 id="实用功能展示">实用功能展示 🌟</h2><h3 id="1-跨设备文件传输">1. 跨设备文件传输</h3><ul><li>Web 界面拖拽上传</li><li>WebDAV 协议支持</li><li>移动端 App 访问</li><li>支持断点续传</li></ul><h3 id="2-影视库功能">2. 影视库功能</h3><ul><li>自动识别影视信息</li><li>在线播放支持</li><li>字幕自动匹配</li><li>播放进度记录</li></ul><h3 id="3-文件管理">3. 文件管理</h3><ul><li>文件分类展示</li><li>文件搜索功能</li><li>批量操作支持</li><li>离线下载功能</li></ul><h2 id="性能优化">性能优化 🚀</h2><ol><li>缓存配置：<pre><code>environment: - CACHE_SIZE=1000 - CACHE_TIMEOUT=60</code></pre></li><li>资源限制：<pre><code>services: alist: deploy: resources: limits: memory: 1G reservations: memory: 512M</code></pre></li></ol><h2 id="常见问题">常见问题 ❓</h2><strong>权限问题</strong>如果遇到文件访问权限问题，请检查：<ul><li>容器内的 PUID 和 PGID 设置</li><li>挂载目录的权限设置</li><li>SELinux 配置（如果启用）</li></ul><h2 id="进阶使用">进阶使用 🎯</h2><h3 id="1-api-集成">1. API 集成</h3><p>AList 提供了完整的 API 接口，可以用于：</p><ul><li>自动化文件管理</li><li>第三方应用集成</li><li>自定义功能开发</li></ul><h3 id="2-备份策略">2. 备份策略</h3><p>定期备份重要数据：</p><pre><code>0 2 * * * tar -czf /backup/alist-$(date +%Y%m%d).tar.gz /path/to/alist/data</code></pre><h2 id="总结">总结 📝</h2><p>通过 AList，我们实现了：</p><ul><li>便捷的跨设备文件传输</li><li>私人影视库的搭建</li><li>统一的文件管理平台</li><li>安全的数据访问控制</li></ul><p>下一篇文章，我们将探讨如何将 AList 与其他服务（如 Emby、Jellyfin）集成，构建更完整的家庭媒体中心。</p><a href="/" class="back-to-home">返回首页 🏠</a><div class="post-tags"><span class="tag">Docker 🐳</span><span class="tag">文件管理 📁</span><span class="tag">自动化 ⚙️</span><span class="tag">Docker 🐳</span><span class="tag">文件管理 📁</span><span class="tag">自动化 ⚙️</span></div></div></body></html>

    <div class="post-tags">
      <span class="tag">Docker 🐳</span>
<span class="tag">文件管理 📁</span>
<span class="tag">自动化 ⚙️</span>
    </div>
  </main>

  <button class="toc-toggle">
    <i class="fas fa-list"></i> 目录
  </button>

  <aside class="toc">
    <div class="toc-title">📚 目录</div>
    <ul>
      <li><a href="#为什么选择-alist">为什么选择 AList？ 🤔</a></li>
<li><a href="#环境准备">环境准备 🛠️</a></li>
<li><a href="#部署步骤">部署步骤 📝</a></li>
  <li><a href="#1-创建配置文件">1. 创建配置文件</a></li>
  <li><a href="#2-启动服务">2. 启动服务</a></li>
  <li><a href="#3-基础配置">3. 基础配置</a></li>
<li><a href="#进阶配置">进阶配置 ⚙️</a></li>
  <li><a href="#1-反向代理设置">1. 反向代理设置</a></li>
  <li><a href="#2-ssl-配置">2. SSL 配置</a></li>
  <li><a href="#3-文件预览优化">3. 文件预览优化</a></li>
<li><a href="#实用功能展示">实用功能展示 🌟</a></li>
  <li><a href="#1-跨设备文件传输">1. 跨设备文件传输</a></li>
  <li><a href="#2-影视库功能">2. 影视库功能</a></li>
  <li><a href="#3-文件管理">3. 文件管理</a></li>
<li><a href="#性能优化">性能优化 🚀</a></li>
<li><a href="#常见问题">常见问题 ❓</a></li>
<li><a href="#进阶使用">进阶使用 🎯</a></li>
  <li><a href="#1-api-集成">1. API 集成</a></li>
  <li><a href="#2-备份策略">2. 备份策略</a></li>
<li><a href="#总结">总结 📝</a></li>
    </ul>
  </aside>

  <div class="share-buttons">
    <button class="share-button" onclick="shareToTwitter()">
      <i class="fab fa-twitter"></i>
    </button>
    <button class="share-button" onclick="shareToFacebook()">
      <i class="fab fa-facebook"></i>
    </button>
    <button class="share-button" onclick="copyLink()">
      <i class="fas fa-link"></i>
    </button>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/highlight.js@11.9.0/highlight.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.8/dist/medium-zoom.min.js"></script>
  <script>
    // 主题切换
    const themeToggle = document.querySelector('.theme-toggle');
    const htmlElement = document.documentElement;
    const themeIcon = themeToggle.querySelector('i');
    
    function setTheme(theme) {
      htmlElement.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
      themeIcon.className = theme === 'dark' ? 'fas fa-moon' : 'fas fa-sun';
    }
    
    // 从 localStorage 获取主题设置
    const savedTheme = localStorage.getItem('theme') || 'dark';
    setTheme(savedTheme);
    
    themeToggle.addEventListener('click', () => {
      const currentTheme = htmlElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      setTheme(newTheme);
    });

    // 目录切换
    const tocToggle = document.querySelector('.toc-toggle');
    const toc = document.querySelector('.toc');
    
    if (tocToggle && toc) {
      tocToggle.addEventListener('click', () => {
        toc.classList.toggle('active');
      });
      
      // 点击目录外部区域关闭目录
      document.addEventListener('click', (e) => {
        if (!toc.contains(e.target) && !tocToggle.contains(e.target)) {
          toc.classList.remove('active');
        }
      });
    }

    // 图片预览
    mediumZoom('img:not(.avatar)', {
      margin: 24,
      background: 'var(--bg)',
      scrollOffset: 0,
    });

    // 代码高亮和复制功能
    document.querySelectorAll('pre code').forEach((block) => {
      hljs.highlightElement(block);
      
      const button = document.createElement('button');
      button.className = 'copy-button';
      button.textContent = '复制';
      
      button.addEventListener('click', async () => {
        const code = block.textContent;
        await navigator.clipboard.writeText(code);
        button.textContent = '已复制!';
        setTimeout(() => {
          button.textContent = '复制';
        }, 2000);
      });
      
      block.parentElement.appendChild(button);
    });

    // 目录高亮
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        const id = entry.target.getAttribute('id');
        const tocLink = document.querySelector(`.toc a[href="#${id}"]`);
        if (tocLink) {
          if (entry.intersectionRatio > 0) {
            document.querySelectorAll('.toc a').forEach(link => link.classList.remove('active'));
            tocLink.classList.add('active');
          }
        }
      });
    }, { rootMargin: '0px 0px -80% 0px' });

    document.querySelectorAll('h2[id], h3[id]').forEach((section) => {
      observer.observe(section);
    });

    // 阅读进度
    const readingProgress = document.querySelector('.reading-progress');
    const content = document.querySelector('.post-content');
    
    if (readingProgress && content) {
      const updateProgress = () => {
        const contentBox = content.getBoundingClientRect();
        const totalHeight = contentBox.height - window.innerHeight;
        const scrolled = window.scrollY;
        const progress = Math.min((scrolled / totalHeight) * 100, 100);
        readingProgress.style.setProperty('--progress', `${progress}%`);
      };
      
      window.addEventListener('scroll', () => {
        requestAnimationFrame(updateProgress);
      });
      
      window.addEventListener('resize', () => {
        requestAnimationFrame(updateProgress);
      });
      
      updateProgress();
    }

    // 分享功能
    function shareToTwitter() {
      const text = document.title;
      const url = window.location.href;
      window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`, '_blank');
    }

    function shareToFacebook() {
      const url = window.location.href;
      window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank');
    }

    async function copyLink() {
      const url = window.location.href;
      await navigator.clipboard.writeText(url);
      alert('链接已复制到剪贴板！');
    }
  </script>
</body>
</html> 